name: App CI

on:
  push:
    # Run on all branches
    branches:
      - "master"
    # Run only if files modified are not docs
    paths-ignore:
      - "*.md"
  pull_request:
    # Run on all branches
    branches:
      - "*"
    # Run only if files modified are not docs
    paths-ignore:
      - "*.md"

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  WEBSITE_BASE: "/oes-rsfg"

jobs:
  # Build
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ env.GITHUB_TOKEN }}

      - uses: actions/setup-node@v2
        with:
          node-version: "18"

      # pnpm cache
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: INSTALL
        run: npm ci

      # --- Build ---
      - name: BUILD
        run: npm run build
        # Where build is configured and defined
        env:
          VITE_CONFIG_BASE: "${{ env.WEBSITE_BASE }}/"
          ROUTER_BASE_NAME : "${{ env.WEBSITE_BASE }}"

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/

  # Deploy to gh pages
  deploy:
    name: Deploy
    permissions:
      contents: write
    # Deploy only for main branch
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    # Manual deployment
    # See https://devblogs.microsoft.com/devops/i-need-manual-approvers-for-github-actions-and-i-got-them-now/
    environment:
      name: prod
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ env.GITHUB_TOKEN }}

      - uses: actions/setup-node@v2
        with:
          node-version: "18"

      # Download dist artifacts
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/

      # Deploy dist folder to gh pages
      - name: DEPLOY
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ env.GITHUB_TOKEN }}
          publish_dir: ./dist
          user_name: ${{ secrets.GIT_AUTHOR_NAME }}
          user_email: ${{ secrets.GIT_AUTHOR_EMAIL }}
